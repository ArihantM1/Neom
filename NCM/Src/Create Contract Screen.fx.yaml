"'Create Contract Screen' As screen":
    OnVisible: |
        =Set(
            RandomClauseIndex,
            RoundUp(
                Rand() * 4,  // Generate a random number between 0 and 4
                0
            )
        );
        
        Set(
            SelectedClause,
            FirstN(
                ClauseCollection,
                1 + RandomClauseIndex
            )
        );

    con_Main_CCS As groupContainer.horizontalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutDirection: =LayoutDirection.Vertical
        LayoutMode: =LayoutMode.Auto
        Width: =Parent.Width
        ZIndex: =1

        con_Header_CCS As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =Parent.Height*.1
            LayoutAlignItems: =LayoutAlignItems.Center
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            Width: =Parent.Width
            ZIndex: =2

            HeaderComponent_WithoutNavbar_CCS As HeaderCMP_withoutNavbar:
                Height: =Parent.Height
                LayoutMinHeight: =640
                LayoutMinWidth: =640
                Width: =Parent.Width

        con_VertcalMain_CCS As groupContainer.verticalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            Width: =Parent.Width
            ZIndex: =3

            con_FillerForMilestone_CSS As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                Fill: =RGBA(255, 255, 255, 1)
                FillPortions: =0
                Height: =Parent.Height*.20
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =1

    con_horizonatal_Main_CCS As groupContainer.horizontalAutoLayoutContainer:
        DropShadow: =DropShadow.Bold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =Parent.Height*.83
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        Width: =Parent.Width*.83
        X: =Parent.Width*.15
        Y: =con_FillerForMilestone_CSS.Height*.75
        ZIndex: =2

        con_Vertical_Main_CCS As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            DropShadow: =DropShadow.Bold
            Fill: =RGBA(255, 255, 255, 1)
            Height: =Parent.Height
            LayoutDirection: =LayoutDirection.Vertical
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            ZIndex: =2

            con_Radiooption_CCS As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Height*.10
                LayoutDirection: =LayoutDirection.Vertical
                LayoutJustifyContent: =LayoutJustifyContent.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =20
                Width: =Parent.Width
                ZIndex: =1

                rdo_CreateDucplicateCOCSelect_CCS As radio:
                    AlignInContainer: =AlignInContainer.Start
                    BorderColor: =RGBA(107, 29, 94, 1)
                    BorderStyle: =BorderStyle.None
                    Color: =RGBA(107, 29, 94, 1)
                    Default: ="Create New"
                    Height: =Parent.Height-shp_Devider_CreateDucplicateCOCSelect_CCS.Height
                    Items: =RadioOptions
                    Layout: =Layout.Horizontal
                    LineHeight: =0.8
                    OnChange: |
                        =
                         Set(
                                ContractData,
                                Blank()
                            );
                        Reset('drp_SelectNew&Existing_CCS');
                    OnSelect: =
                    PaddingBottom: =0
                    PaddingTop: =15
                    RadioBorderColor: =RGBA(107, 29, 94, 1)
                    RadioSelectionFill: =RGBA(107, 29, 94, 1)
                    RadioSize: =30
                    Size: =11
                    Width: =Parent.Width*.4
                    ZIndex: =1

                shp_Devider_CreateDucplicateCOCSelect_CCS As rectangle:
                    Fill: =RGBA(219, 219, 219, 1)
                    Height: =2
                    Width: =Parent.Width*.9
                    ZIndex: =2

            con_RadioName_CCS As groupContainer.verticalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.Center
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Width*.04
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Visible: |
                    =If(rdo_CreateDucplicateCOCSelect_CCS.Selected.Value = "Duplicate Existing", true, false)
                Width: =Parent.Width
                ZIndex: =2

                lbl_CreateNew_CCS As label:
                    Align: =Align.Right
                    Size: =12
                    Text: |-
                        ="Select COC:"
                    Width: =lbl_Client_CCS.Width
                    ZIndex: =1

                "'drp_SelectNew&Existing_CCS' As dropdown":
                    AllowEmptySelection: =true
                    BorderColor: =RGBA(219, 200, 216, 1)
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronFill: =RGBA(107, 29, 94, 1)
                    ChevronHoverBackground: =RGBA(107, 29, 94, 1)
                    Color: =RGBA(107, 29, 94, 1)
                    Default: ="--Select a Call off Contact to duplicate--"
                    Height: =30
                    HoverFill: |-
                        = ColorFade( ColorValue("#9e6c97"),80%)
                    Items: =contractName
                    OnChange: =Set(ContractData,'drp_SelectNew&Existing_CCS'.Selected)
                    OnSelect: =Set(contractName,CM_ContractDetails)
                    PressedFill: =RGBA(158, 108, 151, 1)
                    SelectionFill: =ColorFade( RGBA(107, 29, 94, 1),80%)
                    Size: =11
                    Width: =Parent.Width*.85
                    ZIndex: =2

            con_client_ServiceType_CCS As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Width*.04
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =3

                lbl_Client_CCS As label:
                    Align: =Align.Right
                    Size: =12
                    Text: |-
                        ="Client: "
                    Width: =Parent.Width*.09
                    ZIndex: =1

                drp_Client_CCS As dropdown:
                    AllowEmptySelection: =true
                    BorderColor: =RGBA(219, 200, 216, 1)
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronFill: =RGBA(107, 29, 94, 1)
                    ChevronHoverBackground: =RGBA(107, 29, 94, 1)
                    Color: =RGBA(107, 29, 94, 1)
                    Default: |
                        =If(Not(IsBlank(ContractData)),ContractData.Supplier.Value)
                        
                        //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.Supplier.Value)
                    Height: =30
                    HoverFill: |-
                        = ColorFade( ColorValue("#9e6c97"),80%)
                    Items: =CM_ClientData
                    OnChange: =Set(Items,CM_ClientData);
                    OnSelect: =Set(ClientsData,CM_ClientData);
                    PressedFill: =RGBA(158, 108, 151, 1)
                    SelectionFill: =ColorFade( RGBA(107, 29, 94, 1),80%)
                    Size: =11
                    Width: =Parent.Width*.35
                    ZIndex: =2

                lbl_ServiceType_CCS As label:
                    Align: =Align.Right
                    Size: =12
                    Text: |-
                        ="Service Type: "
                    Width: =Parent.Width*.15
                    ZIndex: =3

                drp_ServiceType_CCS As dropdown:
                    AllowEmptySelection: =true
                    BorderColor: =RGBA(219, 200, 216, 1)
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronFill: =RGBA(107, 29, 94, 1)
                    ChevronHoverBackground: =RGBA(107, 29, 94, 1)
                    Color: =RGBA(107, 29, 94, 1)
                    Default: |-
                        =If(Not(IsBlank(ContractData)),ContractData.Service_Type_fk.Value)
                        //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.Service_Type_fk.Value)
                    Height: =30
                    HoverFill: |-
                        = ColorFade( ColorValue("#9e6c97"),80%)
                    Items: =CM_Service_Types
                    OnSelect: =
                    PressedFill: =RGBA(158, 108, 151, 1)
                    SelectionFill: =ColorFade( RGBA(107, 29, 94, 1),80%)
                    Size: =11
                    Width: =Parent.Width*.35
                    ZIndex: =4

            "'con_Services&Name_CCS' As groupContainer.horizontalAutoLayoutContainer":
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Width*.04
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =4

                "'con_S&N_CCS' As groupContainer.horizontalAutoLayoutContainer":
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    Height: =Parent.Height
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width*.50
                    ZIndex: =1

                    lbl_Services_CCS As label:
                        Align: =Align.Right
                        Size: =12
                        Text: |-
                            ="Services:"
                        Width: =lbl_Client_CCS.Width
                        ZIndex: =1

                    drp_Services_CCS As dropdown:
                        AllowEmptySelection: =true
                        BorderColor: =RGBA(219, 200, 216, 1)
                        ChevronBackground: =RGBA(255, 255, 255, 1)
                        ChevronFill: =RGBA(107, 29, 94, 1)
                        ChevronHoverBackground: =RGBA(107, 29, 94, 1)
                        Color: =RGBA(107, 29, 94, 1)
                        Default: |-
                            =If(Not(IsBlank(ContractData)),ContractData.Service_fk.Value)
                            //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.Service_fk.Value)
                        Height: =30
                        HoverFill: |-
                            = ColorFade( ColorValue("#9e6c97"),80%)
                        Items: |-
                            =Filter(
                                CM_Services,
                                Service_Type_fk.Id = drp_ServiceType_CCS.SelectedText.'data-ADB4D7A662F548B49FAC2B986E348A1BID'
                            )
                        OnSelect: =Set(services,Filter(CM_Services, Service_Type_fk.Value= drp_ServiceType_CCS.Selected.Service_Type))
                        PressedFill: =RGBA(158, 108, 151, 1)
                        SelectionFill: =ColorFade( RGBA(107, 29, 94, 1),80%)
                        Size: =12
                        Width: =Parent.Width*.35
                        ZIndex: =2

                    lbl_Name_CCS As label:
                        Align: =Align.Right
                        Size: =12
                        Text: |-
                            ="Name: "
                        Width: =lbl_ServiceType_CCS.Width
                        ZIndex: =3

                    lblContractName_CCS As text:
                        BorderColor: =RGBA(219, 200, 216, 1)
                        Default: |-
                            =If(Not(IsBlank(ContractData)),ContractData.Contract_name)
                            //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.Contract_name)
                        Height: =30
                        HintText: ="--Enter the name of Contract--"
                        HoverBorderColor: =ColorFade( RGBA(107, 29, 94, 1),50%)
                        HoverColor: =RGBA(107, 29, 94, 1)
                        HoverFill: |-
                            = ColorFade( ColorValue("#9e6c97"),80%)
                        PaddingLeft: =10
                        PressedColor: =RGBA(107, 29, 94, 1)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =11
                        Width: =drp_Services_CCS.Width
                        ZIndex: =4

            "'con_Currency&Applicable_CSS' As groupContainer.horizontalAutoLayoutContainer":
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Width*.04
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =5

                lbl_Currency_CCS As label:
                    Align: =Align.Right
                    Size: =12
                    Text: |-
                        ="Currency:"
                    Width: =lbl_Client_CCS.Width
                    ZIndex: =1

                drp_Currency_CCS As dropdown:
                    AllowEmptySelection: =true
                    BorderColor: =RGBA(219, 200, 216, 1)
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronFill: =RGBA(107, 29, 94, 1)
                    ChevronHoverBackground: =RGBA(107, 29, 94, 1)
                    Color: =RGBA(107, 29, 94, 1)
                    Default: |-
                        =If(Not(IsBlank(ContractData)),ContractData.Currency.Value,"")
                        //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.Currency.Value,"")
                    Height: =30
                    HoverFill: |-
                        = ColorFade( ColorValue("#9e6c97"),80%)
                    Items: =Choices(CM_ContractDetails.Currency)
                    PressedFill: =RGBA(158, 108, 151, 1)
                    Reset: =true
                    SelectionFill: =ColorFade( RGBA(107, 29, 94, 1),80%)
                    Size: =11
                    Width: =Parent.Width*.35
                    ZIndex: =2

                lbl_ApplicableTo_CCS As label:
                    Align: =Align.Right
                    Size: =12
                    Text: |-
                        ="Applicable To: "
                    Width: =lbl_ServiceType_CCS.Width
                    ZIndex: =3

                drp_ApplicableTo_CCS As dropdown:
                    AllowEmptySelection: =true
                    BorderColor: =RGBA(219, 200, 216, 1)
                    ChevronBackground: =RGBA(255, 255, 255, 1)
                    ChevronFill: =RGBA(107, 29, 94, 1)
                    ChevronHoverBackground: =RGBA(107, 29, 94, 1)
                    Color: =RGBA(107, 29, 94, 1)
                    Default: |-
                        =If(Not(IsBlank(ContractData)),ContractData.Applicable_to.Value)
                        //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.Applicable_to.Value)
                    Height: =30
                    HoverFill: |-
                        = ColorFade( ColorValue("#9e6c97"),80%)
                    Items: =Choices(CM_ContractDetails.Applicable_to)
                    PressedFill: =RGBA(158, 108, 151, 1)
                    SelectionFill: =ColorFade( RGBA(107, 29, 94, 1),80%)
                    Size: =11
                    Width: =Parent.Width*.35
                    ZIndex: =4

            con_Description_CCS As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Width*.1
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =6

                con_DescriptionIn_CCS As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    Height: =Parent.Height
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    PaddingTop: =2
                    Width: =Parent.Width*.50
                    ZIndex: =1

                    lbl_Description_CCS As label:
                        Align: =Align.Right
                        AlignInContainer: =AlignInContainer.Start
                        PaddingLeft: =0
                        PaddingRight: =0
                        Text: |-
                            ="Description: "
                        Width: =lbl_Client_CCS.Width
                        ZIndex: =1

                    txt_DescriptionInput_CCS As text:
                        AlignInContainer: =AlignInContainer.Center
                        BorderColor: =RGBA(219, 200, 216, 1)
                        Default: |-
                            =If(Not(IsBlank(ContractData)),ContractData.Description)
                            //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.Description)
                        Height: =Parent.Height*.9
                        HintText: ="--Description of the Contract--"
                        HoverBorderColor: =ColorFade( RGBA(107, 29, 94, 1),50%)
                        HoverColor: =RGBA(107, 29, 94, 1)
                        HoverFill: |-
                            = ColorFade( ColorValue("#9e6c97"),80%)
                        Mode: =TextMode.MultiLine
                        PressedColor: =RGBA(107, 29, 94, 1)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =11
                        Width: =drp_Services_CCS.Width
                        ZIndex: =2

                    lbl_Countries_CCS As label:
                        Align: =Align.Right
                        AlignInContainer: =AlignInContainer.Start
                        Size: =12
                        Text: |-
                            ="Countries: "
                        Visible: =If(drp_ApplicableTo_CCS.SelectedText.Value="Regional",true,false)
                        Width: =lbl_ServiceType_CCS.Width
                        ZIndex: =3

                    drp_Country_CCS As dropdown:
                        AlignInContainer: =AlignInContainer.Start
                        AllowEmptySelection: =true
                        BorderColor: =RGBA(219, 200, 216, 1)
                        ChevronBackground: =RGBA(255, 255, 255, 1)
                        ChevronFill: =RGBA(107, 29, 94, 1)
                        ChevronHoverBackground: =RGBA(107, 29, 94, 1)
                        Color: =RGBA(107, 29, 94, 1)
                        Default: |-
                            =If(Not(IsBlank(ContractData)),ContractData.Country.Value)
                            //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.Country.Value)
                        Height: =30
                        HoverFill: |-
                            = ColorFade( ColorValue("#9e6c97"),80%)
                        Items: =Choices( CM_ContractDetails.Country)
                        OnChange: =If(drp_ApplicableTo_CCS.SelectedText.Value="Global",drp_Country_CCS.SelectedText.Value=Blank())
                        PressedFill: =RGBA(158, 108, 151, 1)
                        SelectionFill: =ColorFade( RGBA(107, 29, 94, 1),80%)
                        Size: =11
                        Visible: =If(drp_ApplicableTo_CCS.SelectedText.Value="Regional",true,false)
                        Width: =Parent.Width*.35
                        ZIndex: =4

            con_Date_Main_CCS As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Width*.04
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =7

                con_DateIn_CCS As groupContainer.horizontalAutoLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    Height: =Parent.Height
                    LayoutAlignItems: =LayoutAlignItems.Center
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    LayoutMode: =LayoutMode.Auto
                    Width: =Parent.Width*.50
                    ZIndex: =1

                    lbl_StartDate_CCS As label:
                        Align: =Align.Right
                        Size: =12
                        Text: |-
                            ="Start Date: "
                        Width: =lbl_Client_CCS.Width
                        ZIndex: =1

                    "dte_StartDate_CCS As 'Date picker'":
                        BasePaletteColor: =RGBA(158, 108, 151, 1)
                        DisplayMode: =DisplayMode.Edit
                        FontColor: =RGBA(107, 29, 94, 1)
                        FontSize: =14
                        FontWeight: =FontWeight.Bold
                        Format: ='DatePickerCanvas.Format'.Short
                        Height: =30
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        SelectedDate: |
                            =If(Not(IsBlank(ContractData)),ContractData.Start_date)
                            //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.Start_date)
                        ValidationState: =
                        Width: =lblContractName_CCS.Width
                        X: =0
                        Y: =0
                        ZIndex: =2

                    lbl_EndDate_CCS As label:
                        Align: =Align.Right
                        Size: =12
                        Text: |-
                            ="End Date: "
                        Width: =lbl_ServiceType_CCS.Width
                        ZIndex: =3

                    "dte_EndDate_CCS As 'Date picker'":
                        BasePaletteColor: =RGBA(158, 108, 151, 1)
                        DisplayMode: =DisplayMode.Edit
                        FontColor: =RGBA(107, 29, 94, 1)
                        FontSize: =14
                        FontWeight: =FontWeight.Bold
                        Format: ='DatePickerCanvas.Format'.Short
                        Height: =30
                        LayoutMinHeight: =32
                        LayoutMinWidth: =320
                        SelectedDate: |-
                            =If(Not(IsBlank(ContractData)),ContractData.End_date)
                            //If(Not(IsBlank(lclSelectedContracts)),lclSelectedContracts.End_date)
                        Width: =lblContractName_CCS.Width
                        X: =0
                        Y: =0
                        ZIndex: =4

            con_CreatedMain_CCS As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                FillPortions: =0
                Height: =Parent.Width*.04
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =8

                lbl_CreatedOn_CCS As label:
                    Align: =Align.Right
                    Size: =12
                    Text: |-
                        ="Created On:"
                    Width: =lbl_Client_CCS.Width
                    ZIndex: =1

                dte_CreatedOn_CCS As datepicker:
                    BorderColor: =RGBA(219, 200, 216, 1)
                    DisabledBorderColor: =RGBA(219, 200, 216, 1)
                    DisabledColor: =RGBA(107, 29, 94, 1)
                    DisabledFill: =RGBA(255, 255, 255, 1)
                    DisplayMode: =DisplayMode.Disabled
                    Height: =30
                    IconBackground: =Color.White
                    IconFill: |-
                        =ColorValue("#6b1d5e")
                    PaddingTop: =5
                    Size: =12
                    Width: =drp_Client_CCS.Width
                    ZIndex: =2

                lbl_CreatedBy_CCS As label:
                    Align: =Align.Right
                    Size: =12
                    Text: |-
                        ="Created By:"
                    Width: =lbl_ServiceType_CCS.Width
                    ZIndex: =3

                txt_CreatedBy_CCS As text:
                    BorderColor: =RGBA(219, 200, 216, 1)
                    Default: =User().FullName
                    DisabledBorderColor: =RGBA(219, 200, 216, 1)
                    DisabledColor: =RGBA(107, 29, 94, 1)
                    DisabledFill: =RGBA(255, 255, 255, 1)
                    DisplayMode: =DisplayMode.Disabled
                    Height: =30
                    HintText: =""
                    HoverBorderColor: =RGBA(107, 29, 94, 1)
                    HoverColor: =RGBA(107, 29, 94, 1)
                    HoverFill: =RGBA(219, 200, 216, 1)
                    PaddingLeft: =10
                    PressedColor: =RGBA(107, 29, 94, 1)
                    PressedFill: =RGBA(255, 255, 255, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =12
                    Width: =drp_Services_CCS.Width
                    ZIndex: =4

            con_NavigateButtons_CCS As groupContainer.horizontalAutoLayoutContainer:
                AlignInContainer: =AlignInContainer.SetByContainer
                DropShadow: =DropShadow.None
                Height: =Parent.Height
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
                LayoutMinHeight: =100
                LayoutMinWidth: =250
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =80
                PaddingRight: =80
                Width: =Parent.Width
                ZIndex: =9

                btn_Cancel_CCS As button:
                    BorderColor: =RGBA(219, 200, 216, 1)
                    Color: =RGBA(107, 29, 94, 1)
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =35
                    HoverColor: =RGBA(107, 29, 94, 1)
                    HoverFill: =RGBA(219, 200, 216, 1)
                    OnSelect: |+
                        =Reset(drp_ServiceType_CCS);
                        Reset(drp_Client_CCS);
                        Reset(drp_Services_CCS);
                        Reset(drp_ApplicableTo_CCS);
                        Reset(drp_Currency_CCS);
                        Reset(drp_Country_CCS);
                        Reset('drp_SelectNew&Existing_CCS');
                        Reset(lblContractName_CCS);
                        Reset(txt_DescriptionInput_CCS);
                        Reset(dte_StartDate_CCS);
                        Reset(dte_EndDate_CCS);
                        Reset(rdo_CreateDucplicateCOCSelect_CCS);
                        Navigate('Home Screen');
                        Set(ContractData, Blank())
                        
                        
                    Size: =10
                    Text: ="Cancel"
                    Width: =Parent.Width*.07
                    ZIndex: =1

                btn_Next_CCS_1 As button:
                    BorderColor: =RGBA(107, 29, 94, 1)
                    Color: =RGBA(107, 29, 94, 1)
                    DisplayMode: |-
                        =If(
                            !IsBlank(drp_Client_CCS.SelectedText)
                            And !IsBlank(drp_ServiceType_CCS.SelectedText)
                            And !IsBlank(drp_Services_CCS.SelectedText)
                            And !IsBlank(lblContractName_CCS.Text)
                            And !IsBlank(drp_ApplicableTo_CCS.SelectedText)
                            And !IsBlank(dte_StartDate_CCS.SelectedDate)
                            And !IsBlank(dte_EndDate_CCS.SelectedDate)
                            And !IsBlank(drp_Currency_CCS.SelectedText),
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =35
                    HoverFill: =RGBA(107, 29, 94, 1)
                    OnSelect: |-
                        =If(
                            IsBlank(ContractData),
                               Set(VarContractDetailsPatch,
                                Patch(
                                    CM_ContractDetails,
                                    Defaults(CM_ContractDetails),
                                    {
                                        Client_ID:drp_Client_CCS.Selected.ID,
                                        Contract_name: lblContractName_CCS.Text,
                                        Currency: {Value: drp_Currency_CCS.SelectedText.Value},
                                        Applicable_to: {Value: drp_ApplicableTo_CCS.SelectedText.Value},
                                        Description: txt_DescriptionInput_CCS.Text,
                                        Start_date: dte_StartDate_CCS.SelectedDate,
                                        End_date: dte_EndDate_CCS.SelectedDate,
                                        Coc_stage: 1,
                                        Status: {Value: "Draft"},
                                        Service_Type_fk: {
                                            Id: drp_ServiceType_CCS.Selected.ID,
                                            Value: drp_ServiceType_CCS.SelectedText.Value
                                        },
                                        Supplier: {
                                            Id: drp_Client_CCS.Selected.ID,
                                            Value: drp_Client_CCS.SelectedText.Value
                                        },
                                        Service_fk: {
                                            Id: drp_Services_CCS.Selected.ID,
                                            Value: drp_Services_CCS.SelectedText.Value
                                        },
                                       Title: "C000" & ContractData.ID,
                                        Clauses: LookUp(
                                            ClauseCollection,
                                            Number = RandomClauseIndex
                                        ).Name,
                                        Country: {Value: drp_Country_CCS.SelectedText.Value}
                                    }
                                )
                               )
                            
                            ,
                            
                           Set(VarContractDetailsPatch, Patch(
                                CM_ContractDetails,
                                {ID: ContractData.ID},
                                {
                                    Client_ID:drp_Client_CCS.Selected.ID,
                                    Contract_name: lblContractName_CCS.Text,
                                    Currency: {Value: drp_Currency_CCS.SelectedText.Value},
                                    Applicable_to: {Value: drp_ApplicableTo_CCS.SelectedText.Value},
                                    Description: txt_DescriptionInput_CCS.Text,
                                    Start_date: dte_StartDate_CCS.SelectedDate,
                                    End_date: dte_EndDate_CCS.SelectedDate,
                                    Coc_stage: 1,
                                    Status: {Value: "Draft"},
                                    Service_Type_fk: {
                                        Id: drp_ServiceType_CCS.Selected.ID,
                                        Value: drp_ServiceType_CCS.SelectedText.Value
                                    },
                                    Supplier: {
                                        Id: drp_Client_CCS.Selected.ID,
                                        Value: drp_Client_CCS.SelectedText.Value
                                    },
                                    Service_fk: {
                                        Id: drp_Services_CCS.Selected.ID,
                                        Value: drp_Services_CCS.SelectedText.Value
                                    },
                                    Title: "C000" & ContractData.ID,
                                    Clauses: LookUp(
                                        ClauseCollection,
                                        Number = RandomClauseIndex
                                    ).Name,
                                    Country: {Value: drp_Country_CCS.SelectedText.Value}
                                }
                            ))
                            
                        );
                        Refresh(CM_ContractDetails);
                        Refresh(CM_Client_Contract);
                        Refresh(CM_VENDOR);
                        
                        Set(firstFormID,Last(CM_ContractDetails).ID);
                        /*If(
                            Radio1.Selected.Value = "Create new",
                            Set(
                                ContractData,
                                Patch(
                                    CM_ContractDetails,
                                    Defaults(CM_ContractDetails),
                                    {
                                        Contract_name: lblContractName_CCS.Text,
                                        Currency: {Value: drp_Currency_CCS.SelectedText.Value},
                                        Applicable_to: {Value: drp_ApplicableTo_CCS.SelectedText.Value},
                                        Description: txt_DescriptionInput_CCS.Text,
                                        Start_date: dte_StartDate_CCS.SelectedDate,
                                        End_date: dte_EndDate_CCS.SelectedDate,
                                        Coc_stage: 1,
                                        Status: {Value: "Draft"},
                                        Service_Type_fk: {
                                            Id: drp_ServiceType_CCS.Selected.ID,
                                            Value: drp_ServiceType_CCS.SelectedText.Value
                                        },
                                        Supplier: {
                                            Id: drp_Client_CCS.Selected.ID,
                                            Value: drp_Client_CCS.SelectedText.Value
                                        },
                                        Service_fk: {
                                            Id: drp_Services_CCS.Selected.ID,
                                            Value: drp_Services_CCS.SelectedText.Value
                                        },
                                        Title: "C" & "000" & ContractData.ID,
                                        Clauses: LookUp(
                                            ClauseCollection,
                                            Number = RandomClauseIndex
                                        ).Name,
                                        Country: {Value: drp_Country_CCS.SelectedText.Value}
                                    }
                                );
                            );,
                            Set(
                                ContractData,
                                Patch(
                                    CM_ContractDetails,
                                    Defaults(CM_ContractDetails),
                                    {
                                        Contract_name: lblContractName_CCS.Text,
                                        Currency: {Value: drp_Currency_CCS.SelectedText.Value},
                                        Applicable_to: {Value: drp_ApplicableTo_CCS.SelectedText.Value},
                                        Description: txt_DescriptionInput_CCS.Text,
                                        Start_date: dte_StartDate_CCS.SelectedDate,
                                        End_date: dte_EndDate_CCS.SelectedDate,
                                        Coc_stage: 1,
                                        Status: {Value: "Draft"},
                                        Service_Type_fk: {
                                            Id: drp_ServiceType_CCS.Selected.ID,
                                            Value: drp_ServiceType_CCS.SelectedText.Value
                                        },
                                        Supplier: {
                                            Id: drp_Client_CCS.Selected.ID,
                                            Value: drp_Client_CCS.SelectedText.Value
                                        },
                                        Service_fk: {
                                            Id: drp_Services_CCS.Selected.ID,
                                            Value: drp_Services_CCS.SelectedText.Value
                                        },
                                        Title: "C" & "000" & ContractData.ID,
                                        Clauses: LookUp(
                                            ClauseCollection,
                                            Number = RandomClauseIndex
                                        ).Name,
                                        Country: {Value: drp_Country_CCS.SelectedText.Value}
                                    }
                                );
                            )
                        )*/
                        /*Patch(CM_Task,
                         {
                            Contract_Id:VarContractDetailsPatch.ID,
                            Task_Name:"Fill Out Key Data Of Procurement",
                            Task_Status:"Pending",
                            Task_Assigned_to:"Procurement"
                        
                         }
                        );*/
                        Refresh(CM_Task);
                        Navigate(
                            'Preview Contract Screen_1',
                            ScreenTransition.Cover
                        )
                    Size: =10
                    Text: ="Next"
                    Width: =Parent.Width*.07
                    ZIndex: =3

    grp_Milestone_CCS As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =14

        shp_DocReach_CCS As circle:
            Fill: =RGBA(191, 186, 190, 1)
            Height: =shp_OverviewReach_CCS.Height
            Width: =shp_OverviewReach_CCS.Width
            X: =con_horizonatal_Main_CCS.X-Parent.Width*.065-Self.Width
            Y: =shp_OverviewReach_CCS.Height+shp_OverviewReach_CCS.Y+Parent.Height*.4
            ZIndex: =3

        shp_OverviewReach_CCS As circle:
            BorderStyle: =BorderStyle.None
            Fill: =RGBA(107, 29, 94, 1)
            Height: =70
            Width: =70
            X: =con_horizonatal_Main_CCS.X-Parent.Width*.065-Self.Width
            Y: |
                =con_FillerForMilestone_CSS.Height*.9
            ZIndex: =4

        ico_OvervireReach_CCS As icon.Flag:
            Color: =RGBA(255, 255, 255, 1)
            DisplayMode: =DisplayMode.View
            Height: =35
            Icon: =Icon.Flag
            Width: =35
            X: =shp_OverviewReach_CCS.X+(shp_OverviewReach_CCS.Width-Self.Width)/2
            Y: =shp_OverviewReach_CCS.Y+(shp_OverviewReach_CCS.Height-Self.Height)/2
            ZIndex: =5

        shp_OverViewLine_CCS As rectangle:
            BorderStyle: =BorderStyle.None
            DisplayMode: =DisplayMode.View
            Fill: =RGBA(107, 29, 94, 1)
            Height: =3
            Width: =con_horizonatal_Main_CCS.X-shp_OverviewReach_CCS.Width-shp_OverviewReach_CCS.X-Parent.Width*0.01
            X: =shp_OverviewReach_CCS.X+shp_OverviewReach_CCS.Width+(con_horizonatal_Main_CCS.X-shp_OverviewReach_CCS.X-shp_OverviewReach_CCS.Width-Self.Width)/2
            Y: =shp_OverviewReach_CCS.Y+(shp_OverviewReach_CCS.Height-Self.Height)/2
            ZIndex: =6

        ico_DocReach_CCS As icon.Flag:
            Color: =RGBA(255, 255, 255, 1)
            DisplayMode: =DisplayMode.View
            Height: =35
            Icon: =Icon.Flag
            Width: =35
            X: =shp_DocReach_CCS.X+(shp_DocReach_CCS.Width-Self.Width)/2
            Y: =shp_DocReach_CCS.Y+(shp_DocReach_CCS.Height-Self.Height)/2
            ZIndex: =8

        shp_RectBW_OW_CCS As rectangle:
            Fill: =RGBA(191, 186, 190, 1)
            Height: =-txt_Overview_CCS.Y-txt_Overview_CCS.Height+shp_DocReach_CCS.Y-Parent.Height*0.01
            Width: =3
            X: =txt_Overview_CCS.X+(txt_Overview_CCS.Width-Self.Width)/2
            Y: =txt_Overview_CCS.Y+txt_Overview_CCS.Height
            ZIndex: =11

        txt_Overview_CCS As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Bold
            Text: ="Overview"
            X: =shp_OverviewReach_CCS.X+(shp_OverviewReach_CCS.Width-Self.Width)/2
            Y: =shp_OverviewReach_CCS.Y+shp_OverviewReach_CCS.Height
            ZIndex: =12

        txt_documents_CCS As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Bold
            Text: ="Documents"
            X: =shp_DocReach_CCS.X+(shp_DocReach_CCS.Width-Self.Width)/2
            Y: =shp_DocReach_CCS.Y+shp_DocReach_CCS.Height
            ZIndex: =13

